{"version":3,"sources":["constants.js","utils/db.js","components/team-list/TeamList.component.js","components/team-list/TeamList.container.js","App.js","index.js"],"names":["TEAM_LIST_API_URL","DUMMY_LOGO_URL","ALL_TEAMS_VIEW","FAVOURITES_VIEW","SORT_BY_NAME","SORT_BY_WINS","SORT_ORDER_ASC","SORT_ORDER_DESC","Database","db","_insertTeams","Object","asyncToGenerator","regenerator_default","a","mark","_callee","teams","tx","teamStore","i","len","wrap","_context","prev","next","transaction","objectStore","length","add","complete","stop","apply","this","arguments","init","Promise","resolve","reject","req","window","indexedDB","open","onupgradeneeded","e","target","result","objectStoreNames","contains","deleteObjectStore","createObjectStore","keyPath","createIndex","unique","onsuccess","onerror","insertTeams","_x","getTeamsCount","count","getTeams","startIndex","sortBy","sortOrder","undefined","index","skipped","openCursor","cursor","advance","push","value","continue","TeamListComponent","getViewSwitcher","react_default","createElement","className","onClick","_this","props","onViewSwitch","getSortOptions","onSortSelection","getTableHeader","getTableBody","map","team","key","team_id","alt","name","onError","handleImgError","src","logo_url","wins","losses","toggleFavourites","isFavourite","getPaginationControls","onPreviousClick","onNextClick","selectedView","Component","TeamListContainer","state","teamsPerPage","currentPageNum","teamsCount","favourites","componentDidMount","isTeamListInDB","sent","fetchAndStoreTeamList","getTeamsFromDb","_callee2","_context2","abrupt","_callee3","res","teamList","_context3","fetch","json","_callee4","_this$state","_context4","setState","_callee5","_this$state2","_context5","_callee6","_context6","newFavourites","toConsumableArray","filter","t","some","view","getTableData","_this$state3","TeamList_component_TeamListComponent","App","TeamList_container_TeamListContainer","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.d112eba0.chunk.js","sourcesContent":["export const TEAM_LIST_API_URL = 'https://api.opendota.com/api/teams';\nexport const DUMMY_LOGO_URL = 'https://pngimage.net/wp-content/uploads/2018/06/logo-placeholder-png-2.png';\nexport const ALL_TEAMS_VIEW = 'ALL_TEAMS_VIEW';\nexport const FAVOURITES_VIEW = 'FAVOURITES_VIEW';\nexport const SORT_BY_NAME = 'name';\nexport const SORT_BY_WINS = 'wins';\nexport const SORT_ORDER_ASC = 'next';\nexport const SORT_ORDER_DESC = 'prev';","var Database = (function () {\n\n  var db;\n\n  function init() {\n    return new Promise(function (resolve, reject) {\n      var req = window.indexedDB.open('teamDB', 1);\n      req.onupgradeneeded = function (e) {\n        var db = e.target.result\n        if (db.objectStoreNames.contains('teamStore')) {\n          db.deleteObjectStore('teamStore');\n        };\n        var teamStore = db.createObjectStore(\"teamStore\", { keyPath: \"team_id\" });\n        teamStore.createIndex(\"name\", \"name\", { unique: false });\n        teamStore.createIndex(\"wins\", \"wins\", { unique: false });\n      };\n      req.onsuccess = function (e) {\n        db = e.target.result;\n        resolve();\n      };\n      req.onerror = function (e) {\n        reject(e);\n      };\n    });\n  }\n\n  async function insertTeams(teams) {\n    var tx = db.transaction('teamStore', 'readwrite');\n    var teamStore = tx.objectStore('teamStore');\n    for (var i = 0, len = teams.length; i < len; i++) {\n      await teamStore.add(teams[i]);\n    }\n    await tx.complete;\n  }\n\n  function getTeamsCount() {\n    return new Promise(function (resolve) {\n      db.transaction('teamStore', 'readonly').objectStore('teamStore').count().onsuccess = function (e) {\n        resolve(e.target.result);\n      };\n    });\n  }\n\n  function getTeams(startIndex, count, sortBy, sortOrder = 'next') {\n    return new Promise(function (resolve) {\n      var t = db.transaction(['teamStore'], 'readonly');\n      var index;\n      var teamStore = index = t.objectStore('teamStore');\n      if (sortBy) {\n        index = teamStore.index(sortBy);\n      }\n      var teams = [];\n      var skipped = false;\n      index.openCursor(null, sortOrder).onsuccess = function (e) {\n        var cursor = e.target.result;\n        if (cursor && !skipped && startIndex > 0) {\n          skipped = true;\n          cursor.advance(startIndex);\n          return;\n        }\n        if (cursor) {\n          teams.push(cursor.value);\n          if (teams.length < count) {\n            cursor.continue();\n          } else {\n            resolve(teams);\n          }\n        } else {\n          resolve(teams);\n        }\n      };\n    });\n  }\n\n  return {\n    init,\n    insertTeams,\n    getTeamsCount,\n    getTeams\n  }\n\n})();\n\nexport default Database;\n\n\n\n","import React, { Component } from 'react'\nimport './TeamList.component.css';\nimport { DUMMY_LOGO_URL, ALL_TEAMS_VIEW, FAVOURITES_VIEW, SORT_BY_NAME, SORT_ORDER_ASC, SORT_BY_WINS, SORT_ORDER_DESC } from '../../constants';\n\nexport default class TeamListComponent extends Component {\n\n  getViewSwitcher = () => {\n    return (\n      <div className=\"float-left\">\n        <button onClick={() => { this.props.onViewSwitch(ALL_TEAMS_VIEW) }} className=\"btn btn-default\">All Teams</button>\n        <button onClick={() => { this.props.onViewSwitch(FAVOURITES_VIEW) }} className=\"btn btn-default\">My Favourites</button>\n      </div>\n    );\n  }\n\n  getSortOptions = () => {\n    return (\n      <div className=\"sort-options-container float-right\">\n        <span className=\"sort-by\">Sort By </span>\n        <button onClick={() => this.props.onSortSelection(SORT_BY_NAME, SORT_ORDER_ASC)} className=\"btn btn-default\">Name</button>\n        <button onClick={() => this.props.onSortSelection(SORT_BY_WINS, SORT_ORDER_DESC)} className=\"btn btn-default\">Wins</button>\n      </div>\n    )\n  }\n\n  getTableHeader = () => {\n    return (\n      <thead>\n        <tr>\n          <th>Logo</th>\n          <th>Name</th>\n          <th>Wins</th>\n          <th>Losses</th>\n          <th>Favourite</th>\n        </tr>\n      </thead>\n    );\n  }\n\n  getTableBody = () => {\n    const blackStar = '★';\n    const whiteStar = '☆';\n    return this.props.teams.map(team => {\n      return (\n        <tr key={team.team_id}>\n          <td>\n            <img alt={team.name} onError={this.handleImgError} className=\"team-logo img-responsive\" src={team.logo_url} />\n          </td>\n          <td>{team.name}</td>\n          <td>{team.wins}</td>\n          <td>{team.losses}</td>\n          <td>\n            <span onClick={() => this.props.toggleFavourites(team)} className=\"star-container\">\n              {this.props.isFavourite(team) ? blackStar : whiteStar}\n            </span>\n          </td>\n        </tr>\n      );\n    })\n  }\n\n  getPaginationControls = () => {\n    return (\n      <div className=\"pagination-controls-container float-right\">\n        <button onClick={this.props.onPreviousClick} className=\"btn btn-info\">Previous</button>\n        <button onClick={this.props.onNextClick} className=\"btn btn-info\">Next</button>\n      </div>\n    );\n  }\n\n  handleImgError = (e) => {\n    e.target.src = DUMMY_LOGO_URL;\n  }\n\n  render() {\n    const { selectedView } = this.props;\n    return (\n      <div>\n        {this.getViewSwitcher()}\n        {this.getSortOptions()}\n        <table className=\"table table-striped\">\n          {this.getTableHeader()}\n          <tbody>\n            {this.getTableBody()}\n          </tbody>\n        </table>\n        {selectedView === ALL_TEAMS_VIEW ? this.getPaginationControls() : null}\n      </div>\n    )\n  }\n}\n","import React, { Component } from 'react'\nimport { TEAM_LIST_API_URL, ALL_TEAMS_VIEW, SORT_ORDER_ASC } from '../../constants';\nimport Database from '../../utils/db';\nimport TeamListComponent from './TeamList.component';\n\nexport default class TeamListContainer extends Component {\n\n  state = {\n    teamsPerPage: 10,\n    currentPageNum: 1,\n    teams: [],\n    teamsCount: null,\n    favourites: [],\n    selectedView: ALL_TEAMS_VIEW,\n    sortBy: null,\n    sortOrder: SORT_ORDER_ASC\n  }\n\n  componentDidMount = async () => {\n    const isDBPopulated = await this.isTeamListInDB();\n    if (!isDBPopulated) {\n      await this.fetchAndStoreTeamList();\n    }\n    this.getTeamsFromDb();\n  }\n\n  isTeamListInDB = async () => {\n    await Database.init();\n    const count = await Database.getTeamsCount();\n    return count > 0;\n  }\n\n  fetchAndStoreTeamList = async () => {\n    const res = await fetch(TEAM_LIST_API_URL);\n    const teamList = await res.json();\n    Database.insertTeams(teamList);\n  }\n\n  getTeamsFromDb = async () => {\n    const { currentPageNum, teamsPerPage, sortBy, sortOrder } = this.state;\n    const startIndex = teamsPerPage * (currentPageNum - 1) + 1;\n    const teams = await Database.getTeams(startIndex, teamsPerPage, sortBy, sortOrder);\n    const teamsCount = await Database.getTeamsCount();\n    this.setState({ teams, teamsCount });\n  }\n\n  onNextClick = async () => {\n    const { currentPageNum, teamsCount, teamsPerPage } = this.state;\n    if (currentPageNum < teamsCount / teamsPerPage) {\n      this.setState({\n        currentPageNum: currentPageNum + 1\n      }, () => {\n        this.getTeamsFromDb();\n      });\n    }\n  }\n\n  onPreviousClick = async () => {\n    const { currentPageNum } = this.state;\n    if (currentPageNum > 1) {\n      this.setState({\n        currentPageNum: currentPageNum - 1\n      }, () => {\n        this.getTeamsFromDb();\n      });\n    }\n  }\n\n  toggleFavourites = (team) => {\n    const { favourites } = this.state;\n    let newFavourites = [...favourites];\n    if (this.isFavourite(team)) {\n      newFavourites = favourites.filter(t => {\n        return team.team_id !== t.team_id;\n      });\n    } else {\n      newFavourites.push(team);\n    }\n    this.setState({\n      favourites: newFavourites\n    });\n  }\n\n  isFavourite = (team) => {\n    return this.state.favourites.some(t => {\n      return team.team_id === t.team_id;\n    });\n  }\n\n  onViewSwitch = (view) => {\n    this.setState({\n      selectedView: view\n    });\n  }\n\n  getTableData = () => {\n    const { selectedView, teams, favourites } = this.state;\n    return selectedView === ALL_TEAMS_VIEW ? teams : favourites;\n  }\n\n  onSortSelection = (sortBy, sortOrder) => {\n    this.setState({\n      sortBy,\n      sortOrder,\n      currentPageNum: 1\n    }, () => {\n      this.getTeamsFromDb();\n    })\n  }\n\n  render() {\n    return <TeamListComponent\n      teams={this.getTableData()}\n      onNextClick={this.onNextClick}\n      onPreviousClick={this.onPreviousClick}\n      isFavourite={this.isFavourite}\n      toggleFavourites={this.toggleFavourites}\n      onViewSwitch={this.onViewSwitch}\n      onSortSelection={this.onSortSelection}\n      selectedView={this.state.selectedView}\n    />;\n  }\n}\n","import React, { Component } from 'react';\nimport TeamListContainer from './components/team-list/TeamList.container';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"container\">\n        <TeamListContainer />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}