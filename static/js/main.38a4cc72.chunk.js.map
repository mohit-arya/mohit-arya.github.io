{"version":3,"sources":["calendar/calendar.module.css","calendar/utils/storage.js","calendar/utils/event.js","calendar/calendar.component.js","calendar/event-creator/event-creator.component.js","App.js","index.js","calendar/event-creator/event-creator.module.css"],"names":["module","exports","LocalStorage","localStorage","window","get","key","getItem","set","value","setItem","clear","addEvent","name","date","startTime","endTime","newEvent","events","JSON","stringify","e","eventsString","parse","getEvents","getEventsByDate","Calendar","index","style","createEvent","data","MONTHS","DAYS","target","getAttribute","getMonthInView","monthInView","Date","setDate","setMonth","getMonth","renderDate","row","column","monthInViewIndex","startDay","getDay","lastDateInMonth","getFullYear","todaysDate","getDate","isCurrentMonth","length","className","styles","emptyDate","isToday","formattedDate","getFormattedDate","data-date","onClick","cx","today","renderEvents","d","m","y","month","map","event","eventTime","eventName","calendar","monthName","year","renderMonthInView","layout","i","el","j","day","push","getLayout","EventCreator","active","setVisibility","useState","setEventName","eventDate","setEventDate","eventStartTime","setEventStartTime","eventEndTime","setEventEndTime","useEffect","Fragment","overlay","onSubmit","preventDefault","alert","eventCreator","htmlFor","onChange","type","required","App","eventCreatorActive","setEventCreatorActive","isItemLoaded","itemCount","Number","MAX_SAFE_INTEGER","loadMoreItems","Promise","res","onItemsRendered","ref","height","innerHeight","itemSize","width","innerWidth","itemData","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.38a4cc72.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"calendar\":\"calendar_calendar__37alx\",\"month\":\"calendar_month__1wZ0o\",\"row\":\"calendar_row__3aoA7\",\"day\":\"calendar_day__1Hp72\",\"date\":\"calendar_date__3SvYW\",\"emptyDate\":\"calendar_emptyDate__1RQqN\",\"today\":\"calendar_today__37G8T\",\"event\":\"calendar_event__2lo5C\",\"eventName\":\"calendar_eventName__12By5\"};","export const LocalStorage = (function () {\n  const { localStorage } = window;\n  return {\n    get: function (key) {\n      if (localStorage) {\n        return localStorage.getItem(key) || '';\n      } else {\n        return '';\n      }\n    },\n    set: function (key, value) {\n      if (localStorage) {\n        localStorage.setItem(key, value);\n      }\n    },\n    clear: function () {\n      if (localStorage) {\n        localStorage.clear();\n      }\n    }\n  }\n})();\n","import { LocalStorage } from './storage';\n\nexport const addEvent = function (name, date, startTime, endTime) {\n  try {\n    const newEvent = {\n      name,\n      date,\n      startTime,\n      endTime\n    }\n    events[date] = events[date] ? [...events[date], newEvent] : [newEvent];\n    LocalStorage.set('events', JSON.stringify(events));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nconst getEvents = function () {\n  try {\n    const eventsString = LocalStorage.get('events') || '{}';\n    const events = JSON.parse(eventsString);\n    return events || {};\n  } catch (e) {\n    return {};\n  }\n}\n\nlet events = getEvents();\n\nexport const getEventsByDate = function (date) {\n  return events[date];\n}","import React from 'react';\nimport styles from './calendar.module.css';\nimport cx from 'classnames';\nimport { getEventsByDate } from './utils/event';\n\nfunction Calendar({ index, style, data: createEvent }) {\n\n  const MONTHS = ['January', 'Feburary', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\n\n  const DAYS = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];\n\n  const addEvent = function ({ target }) {\n    const date = target.getAttribute('data-date');\n    createEvent(date);\n  }\n\n  const getMonthInView = function () {\n    const monthInView = new Date();\n    monthInView.setDate(1);\n    monthInView.setMonth(new Date().getMonth() + index);\n    return monthInView;\n  }\n\n  const renderMonthInView = function () {\n    const monthInView = getMonthInView();\n    const monthName = MONTHS[monthInView.getMonth()];\n    const year = monthInView.getFullYear();\n    return (\n      <div className={styles.month}>\n        {monthName} {year}\n      </div>\n    );\n  }\n\n  const renderDate = function (row, column) {\n    const monthInView = getMonthInView();\n    const monthInViewIndex = monthInView.getMonth() + 1;\n    const startDay = monthInView.getDay(); //day of first date of month\n    const lastDateInMonth = new Date(monthInView.getFullYear(), monthInViewIndex, 0);\n    const todaysDate = (new Date()).getDate();\n    const isCurrentMonth = index === 0;\n    const date = (row - 1) * DAYS.length + (column + 1) - startDay;\n    if ((row === 1 && startDay > column) || (date > lastDateInMonth.getDate())) {\n      return <div key={row + column} className={styles.emptyDate}></div>;\n    } else {\n      const isToday = isCurrentMonth && todaysDate === date;\n      const formattedDate = getFormattedDate(date, monthInViewIndex, monthInView.getFullYear());\n      const events = getEventsByDate(formattedDate);\n      return <div key={row + column} data-date={formattedDate} onClick={addEvent} className={cx(styles.date, { [styles.today]: isToday })}>{date} {renderEvents(events)}</div>\n    }\n  }\n\n  const getFormattedDate = function (d, m, y) {\n    const month = m < 10 ? '0' + (m) : m;\n    const date = d < 10 ? '0' + d : d;\n    return `${y}-${month}-${date}`;\n  }\n\n  const renderEvents = function (events) {\n    if (events) {\n      return events.map(event => {\n        return (\n          <div key={event.date + event.name} className={styles.event}>\n            <span className={styles.eventTime}>{event.startTime} - {event.endTime}</span>\n            <span className={styles.eventName}>{event.name}</span>\n          </div>\n        )\n      })\n    }\n    return null;\n  }\n\n  const getLayout = function () {\n    const layout = [];\n    const NUM_ROWS = 6;\n    const NUM_COLUMNS = 7;\n    for (let i = 0; i < NUM_ROWS; i++) {\n      const row = []; let el;\n      for (let j = 0; j < NUM_COLUMNS; j++) {\n        if (i === 0) {\n          el = <div key={i + j} className={styles.day}>{DAYS[j]}</div>\n        } else {\n          el = renderDate(i, j);\n        }\n        row.push(el);\n      }\n      layout.push(row);\n    }\n    return layout;\n  }\n\n  const renderLayout = function () {\n    return getLayout().map((row, index) => {\n      return <div key={index} className={styles.row}>{row}</div>\n    });\n  }\n\n  return (\n    <div className={styles.calendar} style={style}>\n      {renderMonthInView()}\n      {renderLayout()}\n    </div>\n  );\n}\n\nexport default Calendar;","import React, { useState, useEffect } from 'react';\nimport styles from './event-creator.module.css';\nimport { addEvent } from '../utils/event';\n\nfunction EventCreator({ date, active, setVisibility }) {\n\n  const [eventName, setEventName] = useState('');\n  const [eventDate, setEventDate] = useState('');\n  const [eventStartTime, setEventStartTime] = useState('');\n  const [eventEndTime, setEventEndTime] = useState('');\n\n  useEffect(() => {\n    setEventName('')\n    setEventStartTime('');\n    setEventEndTime('');\n    date && setEventDate(date);\n  }, [date])\n\n  const createEvent = function (e) {\n    e.preventDefault();\n    if (addEvent(eventName, eventDate, eventStartTime, eventEndTime)) {\n      setVisibility(false);\n    } else {\n      alert('Something went wrong');\n    }\n  }\n\n  if (active) {\n    return (\n      <React.Fragment>\n        <div className={styles.overlay}></div>\n        <form onSubmit={createEvent} className={styles.eventCreator}>\n          <h2>Create Event</h2>\n          <label htmlFor=\"name\">Name</label>\n          <input value={eventName} onChange={({ target }) => setEventName(target.value)} type=\"text\" name=\"date\" required />\n          <label htmlFor=\"date\">Date</label>\n          <input value={eventDate} onChange={({ target }) => setEventDate(target.value)} type=\"date\" name=\"date\" required />\n          <label htmlFor=\"start\">Start</label>\n          <input value={eventStartTime} onChange={({ target }) => setEventStartTime(target.value)} type=\"time\" name=\"start\" required />\n          <label htmlFor=\"end\">End</label>\n          <input value={eventEndTime} onChange={({ target }) => setEventEndTime(target.value)} type=\"time\" name=\"end\" required />\n          <button type='submit'>Save Event</button>\n          <button type='button' onClick={() => setVisibility(false)}>Close</button>\n        </form>\n      </React.Fragment>\n    );\n  }\n  return null;\n}\n\nexport default EventCreator;","import React, { useState } from 'react';\nimport { FixedSizeList as List } from \"react-window\";\nimport InfiniteLoader from \"react-window-infinite-loader\";\nimport Calendar from './calendar/calendar.component';\nimport EventCreator from './calendar/event-creator/event-creator.component';\nimport './App.css';\n\nfunction App() {\n\n  const [eventDate, setEventDate] = useState(null);\n  const [eventCreatorActive, setEventCreatorActive] = useState(false);\n\n  const createEvent = function (eventDate) {\n    setEventDate(eventDate);\n    setEventCreatorActive(true);\n  }\n\n  return (\n    <React.Fragment>\n      <EventCreator\n        active={eventCreatorActive}\n        date={eventDate}\n        setVisibility={setEventCreatorActive}\n      />\n      <InfiniteLoader\n        isItemLoaded={() => true}\n        itemCount={Number.MAX_SAFE_INTEGER}\n        loadMoreItems={() => new Promise(res => res())}\n      >\n        {({ onItemsRendered, ref }) => (\n          <List\n            className=\"List\"\n            height={window.innerHeight}\n            itemCount={Number.MAX_SAFE_INTEGER}\n            itemSize={window.innerHeight}\n            onItemsRendered={onItemsRendered}\n            ref={ref}\n            width={window.innerWidth}\n            itemData={createEvent}\n          >\n            {Calendar}\n          </List>\n        )}\n      </InfiniteLoader>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"overlay\":\"event-creator_overlay__30OJ5\",\"eventCreator\":\"event-creator_eventCreator__3x06k\"};"],"sourceRoot":""}